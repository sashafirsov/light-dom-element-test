{
  "version": 3,
  "sources": ["../../src/shadow-dom-element.js"],
  "sourcesContent": ["const attr = (el, name)=>el.getAttribute(name);\n\nexport default class ShadowDomElement extends HTMLElement\n{\n    promise;\n\n    constructor()\n    {\n        super();\n        this.promise = this.slotsInit();\n    }\n    async fetch( url ){ return ( await fetch( url ) ).text() }\n\n    applyTemplate( t )\n    {\n        // @ts-ignore\n        const s = this.shadowRoot;\n        s.appendChild( t.content.cloneNode( true ) );\n        s.querySelectorAll('slot[attribute]').forEach( a =>\n        {   let f = attr(a,'for')\n            ,   s = f ? a.getRootNode().querySelector('#'+f) : a.parentElement;\n\n            s.setAttribute( attr( a, 'attribute' )\n                ,   a.assignedElements().map( l=>attr( l, 'href')\n                                                 ||  attr( l, 'src')\n                                                 ||  l.innerText).join(''))\n        });\n        return this;\n    }\n\n    async slotsInit()\n    {\n        const getText = async url => this.fetch( url );\n        const onAttr = async( att, cb ) =>\n        {\n            await ( async a => ( a ? cb( a ) : 0 ) )( attr(this, att ) );\n        };\n        const embeddedTemplates = [ ...this.getElementsByTagName( 'template' ) ];\n        await onAttr(\n            'srcset',\n            id => ( this.innerHTML = `${ document.getElementById( id )?.innerHTML }` )\n        );\n        await onAttr( 'src', async url => ( this.innerHTML = await getText( url ) ) );\n\n        this.attachShadow( { mode: 'open' } );\n        const applyTemplate = t => this.applyTemplate( t );\n        // @ts-ignore\n        embeddedTemplates.forEach( applyTemplate );\n\n        await onAttr( 'for', id => applyTemplate( document.getElementById( id ) ) );\n        await onAttr( 'code', async url =>\n        {\n            const d = document.createElement( 'div' );\n            d.innerHTML = await getText( url );\n            const t = document.createElement( 'template' );\n            d.childNodes.forEach( n => t.content.append( n ) );\n            applyTemplate( t );\n        } );\n        return this;\n    }\n}\n\nwindow.customElements.define('shadow-dom-element', ShadowDomElement);\n"],
  "mappings": "AAAA,KAAM,GAAO,CAAC,EAAI,IAAO,EAAG,aAAa,CAAI,EAE7C,qBAAqB,SAAyB,YAC9C,CACI,QAEA,aACA,CACI,MAAM,EACN,KAAK,QAAU,KAAK,UAAU,CAClC,CACA,KAAM,OAAO,EAAK,CAAE,MAAS,MAAM,OAAO,CAAI,GAAI,KAAK,CAAE,CAEzD,cAAe,EACf,CAEI,KAAM,GAAI,KAAK,WACf,SAAE,YAAa,EAAE,QAAQ,UAAW,EAAK,CAAE,EAC3C,EAAE,iBAAiB,iBAAiB,EAAE,QAAS,GAC/C,CAAI,GAAI,GAAI,EAAK,EAAE,KAAK,EAGpB,AAFQ,GAAI,EAAE,YAAY,EAAE,cAAc,IAAI,CAAC,EAAI,EAAE,eAEnD,aAAc,EAAM,EAAG,WAAY,EAC7B,EAAE,iBAAiB,EAAE,IAAK,GAAG,EAAM,EAAG,MAAM,GACX,EAAM,EAAG,KAAK,GACd,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAClE,CAAC,EACM,IACX,CAEA,KAAM,YACN,CACI,KAAM,GAAU,KAAM,IAAO,KAAK,MAAO,CAAI,EACvC,EAAS,MAAO,EAAK,IAC3B,CACI,KAAQ,MAAM,IAAO,EAAI,EAAI,CAAE,EAAI,GAAO,EAAK,KAAM,CAAI,CAAE,CAC/D,EACM,EAAoB,CAAE,GAAG,KAAK,qBAAsB,UAAW,CAAE,EACvE,KAAM,GACF,SACA,GAAQ,KAAK,UAAY,GAAI,SAAS,eAAgB,CAAG,GAAG,WAChE,EACA,KAAM,GAAQ,MAAO,KAAM,IAAS,KAAK,UAAY,KAAM,GAAS,CAAI,CAAI,EAE5E,KAAK,aAAc,CAAE,KAAM,MAAO,CAAE,EACpC,KAAM,GAAgB,GAAK,KAAK,cAAe,CAAE,EAEjD,SAAkB,QAAS,CAAc,EAEzC,KAAM,GAAQ,MAAO,GAAM,EAAe,SAAS,eAAgB,CAAG,CAAE,CAAE,EAC1E,KAAM,GAAQ,OAAQ,KAAM,IAC5B,CACI,KAAM,GAAI,SAAS,cAAe,KAAM,EACxC,EAAE,UAAY,KAAM,GAAS,CAAI,EACjC,KAAM,GAAI,SAAS,cAAe,UAAW,EAC7C,EAAE,WAAW,QAAS,GAAK,EAAE,QAAQ,OAAQ,CAAE,CAAE,EACjD,EAAe,CAAE,CACrB,CAAE,EACK,IACX,CACJ,CAEA,OAAO,eAAe,OAAO,qBAAsB,CAAgB",
  "names": []
}
