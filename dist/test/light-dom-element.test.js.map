{"version":3,"file":"light-dom-element.test.js","sourceRoot":"","sources":["../../test/light-dom-element.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AACnD,OAAO,EAAE,QAAQ,IAAI,CAAC,EAAE,MAAM,WAAW,CAAC;AAG1C,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;QACpC,MAAM,EAAE,GAAG,MAAM,OAAO,CACpB,IAAI,CAAA,2DAA2D,CAClE,CAAC;QAEF,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QAClD,MAAM,EAAE,GAAG,MAAM,OAAO,CACpB,IAAI,CAAA;;kCAEkB,CACzB,CAAC;QAEF,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACnC,MAAM,EAAE,GAAG,MAAM,OAAO,CACpB,IAAI,CAAA;;;;iCAIiB,CACxB,CAAC;QAEF,MAAM,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC;IAClD,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;QACtC,MAAM,EAAE,GAAG,MAAM,OAAO,CACpB,IAAI,CAAA;;;;;iCAKiB,CACxB,CAAC;QACF,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACnD,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAC5B,MAAM,EAAE,GAAG,MAAM,OAAO,CACpB,IAAI,CAAA;;;;;;;iCAOiB,CACxB,CAAC;QACF,8BAA8B;QAC9B,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACvC,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3C,WAAW;QACX,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC1C,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import { html } from 'lit';\nimport { fixture, expect } from '@open-wc/testing';\nimport { CssChain as $ } from 'css-chain';\nimport LightDomElement from '../src/light-dom-element.js';\n\ndescribe('LightDomElement test', () => {\n    it('passed title attribute', async () => {\n        const el = await fixture<LightDomElement>(\n            html`<light-dom-element title=\"Hey there\"></light-dom-element>`\n        );\n\n        expect(el.title).to.equal('Hey there');\n    });\n    it('can override the title via attribute', async () => {\n        const el = await fixture<LightDomElement>(\n            html`<light-dom-element\n                title=\"attribute title\"\n            ></light-dom-element>`\n        );\n\n        expect(el.title).to.equal('attribute title');\n    });\n    it('passes the a11y audit', async () => {\n        const el = await fixture<LightDomElement>(\n            html` <light-dom-element>\n                <template>\n                    <button>action</button>\n                </template>\n            </light-dom-element>`\n        );\n\n        await expect(el).shadowDom.to.be.accessible();\n    });\n    it('renders template content', async () => {\n        const el = await fixture<LightDomElement>(\n            html`<light-dom-element>\n                <template>\n                    <slot name=\"slot1\"><button>action</button></slot>\n                </template>\n                <button slot=\"slot1\">action</button>\n            </light-dom-element>`\n        );\n        expect($(el).$('button').txt()).to.equal('action');\n        expect($('button', el).txt()).to.equal('action');\n    });\n    it('replaces slots', async () => {\n        const el = await fixture<LightDomElement>(\n            html`<light-dom-element>\n                <template>\n                    <slot name=\"slot1\"><h5>heading 5</h5></slot>\n                    <slot name=\"slot2\"><button>action</button></slot>\n                </template>\n                <a slot=\"slot2\" href=\"#\">link</a>\n                <h3 slot=\"slot1\" id=\"heading\">heading 3</h3>\n            </light-dom-element>`\n        );\n        // template slots are replaced\n        expect($('h5', el).txt()).to.equal('');\n        expect($('button', el).length).to.equal(0);\n        // by slots\n        expect($('a', el).txt()).to.equal('link');\n        expect($('h3', el).id).to.equal('heading');\n    });\n});\n"]}