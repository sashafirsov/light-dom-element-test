{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "LightDomElementTest",
          "declaration": {
            "name": "LightDomElementTest",
            "module": "./LightDomElementTest.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/light-dom-element-test.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "light-dom-element-test",
          "declaration": {
            "name": "LightDomElementTest",
            "module": "/src/LightDomElementTest.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/light-dom-element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LightDomElement",
          "members": [
            {
              "kind": "method",
              "name": "applyTemplate",
              "parameters": [
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "ShadowDomElement",
                "module": "src/shadow-dom-element.js"
              }
            },
            {
              "kind": "method",
              "name": "attachShadow"
            },
            {
              "kind": "field",
              "name": "promise",
              "inheritedFrom": {
                "name": "ShadowDomElement",
                "module": "src/shadow-dom-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "url"
                }
              ],
              "inheritedFrom": {
                "name": "ShadowDomElement",
                "module": "src/shadow-dom-element.js"
              }
            },
            {
              "kind": "method",
              "name": "slotsInit",
              "inheritedFrom": {
                "name": "ShadowDomElement",
                "module": "src/shadow-dom-element.js"
              }
            }
          ],
          "superclass": {
            "name": "ShadowDomElement",
            "package": "shadow-dom-element"
          },
          "tagName": "light-dom-element",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "LightDomElement",
            "module": "src/light-dom-element.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "light-dom-element",
          "declaration": {
            "name": "LightDomElement",
            "module": "src/light-dom-element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/LightDomElementTest.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LightDomElementTest",
          "members": [
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "'Hey there'",
              "attribute": "title"
            },
            {
              "kind": "field",
              "name": "counter",
              "type": {
                "text": "number"
              },
              "default": "5",
              "attribute": "counter"
            },
            {
              "kind": "method",
              "name": "__increment"
            }
          ],
          "attributes": [
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "'Hey there'",
              "fieldName": "title"
            },
            {
              "name": "counter",
              "type": {
                "text": "number"
              },
              "default": "5",
              "fieldName": "counter"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "light-dom-element-test",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LightDomElementTest",
          "declaration": {
            "name": "LightDomElementTest",
            "module": "src/LightDomElementTest.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shadow-dom-element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ShadowDomElement",
          "members": [
            {
              "kind": "field",
              "name": "promise"
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "url"
                }
              ]
            },
            {
              "kind": "method",
              "name": "applyTemplate",
              "parameters": [
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "slotsInit"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "shadow-dom-element",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "ShadowDomElement",
            "module": "src/shadow-dom-element.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "shadow-dom-element",
          "declaration": {
            "name": "ShadowDomElement",
            "module": "src/shadow-dom-element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/index.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Regular"
        },
        {
          "kind": "variable",
          "name": "CustomTitle"
        },
        {
          "kind": "variable",
          "name": "CustomCounter"
        },
        {
          "kind": "variable",
          "name": "SlottedContent"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "stories/index.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Regular",
          "declaration": {
            "name": "Regular",
            "module": "stories/index.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "CustomTitle",
          "declaration": {
            "name": "CustomTitle",
            "module": "stories/index.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "CustomCounter",
          "declaration": {
            "name": "CustomCounter",
            "module": "stories/index.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "SlottedContent",
          "declaration": {
            "name": "SlottedContent",
            "module": "stories/index.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "coverage/lcov-report/block-navigation.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "coverage/lcov-report/prettify.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "coverage/lcov-report/sorter.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "LightDomElementTest",
          "declaration": {
            "name": "LightDomElementTest",
            "module": "./LightDomElementTest.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/light-dom-element-test.js",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "light-dom-element-test",
          "declaration": {
            "name": "LightDomElementTest",
            "module": "/dist/src/LightDomElementTest.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/light-dom-element.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ShadowDomElement",
          "default": "class extends HTMLElement {\n  promise;\n  constructor() {\n    super();\n    this.promise = this.slotsInit();\n  }\n  async fetch(url) {\n    return (await fetch(url)).text();\n  }\n  applyTemplate(t) {\n    const s = this.shadowRoot;\n    s.appendChild(t.content.cloneNode(true));\n    s.querySelectorAll(\"slot[attribute]\").forEach((a) => {\n      let f = attr(a, \"for\"), s2 = f ? a.getRootNode().querySelector(\"#\" + f) : a.parentElement;\n      s2.setAttribute(attr(a, \"attribute\"), a.assignedElements().map((l) => attr(l, \"href\") || attr(l, \"src\") || l.innerText).join(\"\"));\n    });\n    return this;\n  }\n  async slotsInit() {\n    const getText = async (url) => this.fetch(url);\n    const onAttr = async (att, cb) => {\n      await (async (a) => a ? cb(a) : 0)(attr(this, att));\n    };\n    const embeddedTemplates = [...this.getElementsByTagName(\"template\")];\n    await onAttr(\"srcset\", (id) => this.innerHTML = `${document.getElementById(id)?.innerHTML}`);\n    await onAttr(\"src\", async (url) => this.innerHTML = await getText(url));\n    this.attachShadow({ mode: \"open\" });\n    const applyTemplate = (t) => this.applyTemplate(t);\n    embeddedTemplates.forEach(applyTemplate);\n    await onAttr(\"for\", (id) => applyTemplate(document.getElementById(id)));\n    await onAttr(\"code\", async (url) => {\n      const d = document.createElement(\"div\");\n      d.innerHTML = await getText(url);\n      const t = document.createElement(\"template\");\n      d.childNodes.forEach((n) => t.content.append(n));\n      applyTemplate(t);\n    });\n    return this;\n  }\n}"
        },
        {
          "kind": "variable",
          "name": "LightDomElement",
          "default": "class extends ShadowDomElement {\n  applyTemplate(t) {\n    CssChain(this).template(t);\n    const s = this;\n    s.querySelectorAll(\"slot[attribute]\").forEach((a) => {\n      let f = attr2(a, \"for\"), s2 = f ? a.getRootNode().querySelector(\"#\" + f) : a.parentElement;\n      s2.setAttribute(attr2(a, \"attribute\"), a.assignedElements().map((l) => attr2(l, \"href\") || attr2(l, \"src\") || l.innerText).join(\"\"));\n    });\n    return this;\n  }\n  attachShadow() {\n  }\n}"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "shadow-dom-element",
          "declaration": {
            "name": "ShadowDomElement",
            "module": "dist/src/light-dom-element.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "light-dom-element",
          "declaration": {
            "name": "LightDomElement",
            "module": "dist/src/light-dom-element.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "LightDomElement",
            "module": "dist/src/light-dom-element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/LightDomElementTest.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LightDomElementTest",
          "members": [
            {
              "kind": "method",
              "name": "__increment"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "'Hey there'"
            },
            {
              "kind": "field",
              "name": "counter",
              "type": {
                "text": "number"
              },
              "default": "5"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "light-dom-element-test",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LightDomElementTest",
          "declaration": {
            "name": "LightDomElementTest",
            "module": "dist/src/LightDomElementTest.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shadow-dom-element.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ShadowDomElement",
          "default": "class extends HTMLElement {\n  promise;\n  constructor() {\n    super();\n    this.promise = this.slotsInit();\n  }\n  async fetch(url) {\n    return (await fetch(url)).text();\n  }\n  applyTemplate(t) {\n    const s = this.shadowRoot;\n    s.appendChild(t.content.cloneNode(true));\n    s.querySelectorAll(\"slot[attribute]\").forEach((a) => {\n      let f = attr(a, \"for\"), s2 = f ? a.getRootNode().querySelector(\"#\" + f) : a.parentElement;\n      s2.setAttribute(attr(a, \"attribute\"), a.assignedElements().map((l) => attr(l, \"href\") || attr(l, \"src\") || l.innerText).join(\"\"));\n    });\n    return this;\n  }\n  async slotsInit() {\n    const getText = async (url) => this.fetch(url);\n    const onAttr = async (att, cb) => {\n      await (async (a) => a ? cb(a) : 0)(attr(this, att));\n    };\n    const embeddedTemplates = [...this.getElementsByTagName(\"template\")];\n    await onAttr(\"srcset\", (id) => this.innerHTML = `${document.getElementById(id)?.innerHTML}`);\n    await onAttr(\"src\", async (url) => this.innerHTML = await getText(url));\n    this.attachShadow({ mode: \"open\" });\n    const applyTemplate = (t) => this.applyTemplate(t);\n    embeddedTemplates.forEach(applyTemplate);\n    await onAttr(\"for\", (id) => applyTemplate(document.getElementById(id)));\n    await onAttr(\"code\", async (url) => {\n      const d = document.createElement(\"div\");\n      d.innerHTML = await getText(url);\n      const t = document.createElement(\"template\");\n      d.childNodes.forEach((n) => t.content.append(n));\n      applyTemplate(t);\n    });\n    return this;\n  }\n}"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "shadow-dom-element",
          "declaration": {
            "name": "ShadowDomElement",
            "module": "dist/src/shadow-dom-element.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "ShadowDomElement",
            "module": "dist/src/shadow-dom-element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/stories/index.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Regular"
        },
        {
          "kind": "variable",
          "name": "CustomTitle"
        },
        {
          "kind": "variable",
          "name": "CustomCounter"
        },
        {
          "kind": "variable",
          "name": "SlottedContent"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "dist/stories/index.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Regular",
          "declaration": {
            "name": "Regular",
            "module": "dist/stories/index.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "CustomTitle",
          "declaration": {
            "name": "CustomTitle",
            "module": "dist/stories/index.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "CustomCounter",
          "declaration": {
            "name": "CustomCounter",
            "module": "dist/stories/index.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "SlottedContent",
          "declaration": {
            "name": "SlottedContent",
            "module": "dist/stories/index.stories.js"
          }
        }
      ]
    }
  ]
}
